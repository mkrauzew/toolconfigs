" First, install Vundle: 'git clone https://github.com/gmarik/Vundle.vim.git ~/.vim/bundle/Vundle.vim'
" After declaring plugins in .vimrc, run :PluginInstall to install them for the first time
" :PluginUpdate updates plugins
" To remove a plugin, remove its declaration from .vimrc and run :PluginClean
" Plugin names are their paths on github, e.g. 'VundleVim/Vundle.vim' is
" downloaded from https://github.com/VundleVim/Vundle.vim repository

set nocompatible
set hidden
filetype off

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

Plugin 'VundleVim/Vundle.vim'
Plugin 'tmhedberg/SimpylFold'
" YouCompleteMe requires some additional steps to install
" Do this after YCM has already been installed with PluginInstall
" 1. Install jedi ('pip3 install jedi' or 'pip3 install --user jedi')
" 2. Install dependencies for autocompleter ('apt-get install build-essential cmake python3-dev')
" 3. Build autocompleter for Python an C/C++ ('cd ~/.vim/bundle/YouCompleteMe; python3 install.py --clang-completer')
Plugin 'Valloric/YouCompleteMe'
" Syntastic and vim-flake8 require flake8 ('pip3 install --user flake8')
" Syntastic can be configured to run code through flake8 automatically (e.g. on save)
" vim-flake allows you to run our code through flake8 synax checker by pressing <F7>
Plugin 'vim-syntastic/syntastic'
Plugin 'nvie/vim-flake8'
Plugin 'scrooloose/nerdtree'
Plugin 'jistr/vim-nerdtree-tabs'
Plugin 'kien/ctrlp.vim'
Plugin 'tpope/vim-fugitive'
Plugin 'Lokaltog/powerline', {'rtp': 'powerline/bindings/vim/'}
Plugin 'ap/vim-buftabline'

" add all your plugins before this line
call vundle#end()

filetype plugin indent on

" Make sure the <leader> is backslash
let mapleader = "\\"

" Wrapping and folding settings
set textwidth=0
set foldmethod=indent
set foldlevel=99
set foldlevelstart=99

" Syntax highlight and numbering
au FileType c,cpp,python
    \ set tabstop=4 |
    \ set softtabstop=4 |
    \ set shiftwidth=4 |
    \ set expandtab |
    \ set textwidth=79 |
    \ set autoindent |
    \ set fileformat=unix |
    \ syntax on |
    \ set number

au FileType python
    \ let python_highlight_all=1 |
    \ map <buffer> <F6> :w<cr>:!python3 %<cr>

" UTF-8 encoding
set encoding=utf-8

" Lighter fonts
set background=dark

" BufTabLine customizations
let g:buftabline_show = 1
let g:buftabline_numbers = 1
let g:buftabline_indicators = 1

" Syntastic customizations
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 0
let g:syntastic_check_on_wq = 1

" SimpylFold customizations
let g:SimpylFold_docstring_preview = 1

" YCM customizations
let g:ycm_add_preview_to_completeopt = 1
let g:ycm_autoclose_preview_window_after_completon = 1
let g:ycm_autoclose_preview_window_after_insertion = 1
let g:ycm_global_ycm_extra_conf = "$HOME/.vim/ycm.py"
let g:ycm_extra_conf_vim_data = ['&filetype']
map <leader>g :YcmCompleter GoToDefinitionElseDeclaration<CR>

" Split navigations
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" New splits should apprear below or to the right
set splitbelow
set splitright

" Key mappings

"" Toggle NERDTree (and PowerLine at the same time)
nmap <C-n> :NERDTreeToggle<CR>

"" Use Ctrl-P to find tags
nnoremap <leader>. :CtrlPTag<cr>

"" Navigate buffer tabs
nnoremap <A-Right> :bnext<CR>
nnoremap <A-Left> :bprev<CR>

"" Copying, cutting and pasting to clipboard (register '+')
"" Requires X11 connection to cooperate with other applications through system clipboard
nnoremap <S-Insert> "+p
nnoremap <C-S-Insert> "+P
vnoremap <C-Insert> "+y
vnoremap <C-Delete> "+d

"" Use space to open folds
nnoremap <space> za

"" Use '#' and '-#' in visual mode for Python block commenting/uncommenting
"" Only lines containing at least one non-blank character will be commented
au FileType python vnoremap <silent> # :s/^.*\S.*$/# &/<cr>:noh<cr>
au FileType python vnoremap <silent> -# :s/^# //<cr>:noh<cr>
